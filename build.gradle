plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.15'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    // 서버를 재실행 안해줘도 바로 처리가능하게 만드는 라이브러리
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // MySQL
    runtimeOnly 'com.mysql:mysql-connector-j'
    // H2
    runtimeOnly 'com.h2database:h2'
    // 룸북
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    // 유효성 검사 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // swagger
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    // thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation group: 'com.google.api-client', name: 'google-api-client-jackson2', version: '1.30.10'
    // AWS S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
}

tasks.named('test') {
    useJUnitPlatform()
}
